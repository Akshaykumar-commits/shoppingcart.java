import java.util.*;

// Encapsulation for product
class Product {
    private String name;
    private double price;
    private int quantity;

    public Product(String name, double price, int quantity) {
        this.name = name;
        this.price = price;
        this.quantity = quantity;
    }

    // Getters
    public String getName() { return name; }
    public double getPrice() { return price; }
    public int getQuantity() { return quantity; }

    public double getTotalPrice() {
        return price * quantity;
    }
}

// Polymorphism: Abstract Discount
abstract class Discount {
    public abstract double applyDiscount(double total, List<Product> products);
}

class FestiveDiscount extends Discount {
    public double applyDiscount(double total, List<Product> products) {
        return total * 0.90; // 10% off
    }
}

class BulkDiscount extends Discount {
    public double applyDiscount(double total, List<Product> products) {
        for (Product p : products) {
            if (p.getQuantity() > 5) {
                return total * 0.80; // 20% off if any product > 5
            }
        }
        return total; // no discount
    }
}

// Payment Interface
interface Payment {
    void pay(double amount);
}

class CardPayment implements Payment {
    public void pay(double amount) {
        System.out.println("Total Amount Payable: " + String.format("%.2f", amount));
    }
}

// Shopping Cart class
class ShoppingCart {
    private List<Product> products;

    public ShoppingCart() {
        products = new ArrayList<>();
    }

    public void addProduct(Product p) {
        products.add(p);
    }

    public void checkout(Discount discount, Payment payment) {
        double total = 0;
        for (Product p : products) {
            System.out.println("Product: " + p.getName() +
                               ", Price: " + p.getPrice() +
                               ", Quantity: " + p.getQuantity());
            total += p.getTotalPrice();
        }
        double discountedTotal = discount.applyDiscount(total, products);
        payment.pay(discountedTotal);
    }
}

// Main class
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        ShoppingCart cart = new ShoppingCart();

        int n = Integer.parseInt(sc.nextLine());

        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(" ");
            String name = input[0];
            double price = Double.parseDouble(input[1]);
            int quantity = Integer.parseInt(input[2]);
            cart.addProduct(new Product(name, price, quantity));
        }

        String discountType = sc.nextLine().trim().toLowerCase();
        Discount discount;

        if (discountType.equals("festive")) {
            discount = new FestiveDiscount();
        } else {
            discount = new BulkDiscount();
        }

        Payment payment = new CardPayment();
        cart.checkout(discount, payment);

        sc.close();
    }
}
